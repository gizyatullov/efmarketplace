services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
    - .env
    environment:
      - HOST=0.0.0.0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=efmarketplace
      - POSTGRES_PASSWORD=efmarketplace
      - POSTGRES_DB=efmarketplace
      - REDIS_HOST=efmarketplace-redis
      - REDIS_PORT=6379
    volumes:
      -
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:13.8-bullseye
    hostname: db
    environment:
      POSTGRES_USER: efmarketplace
      POSTGRES_PASSWORD: efmarketplace
      POSTGRES_DB: efmarketplace
    volumes:
    - db-data-dev:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U ticket
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: ticket:${TICKET_VERSION:-latest}
    restart: "no"
    command: aerich upgrade
    environment:
      TICKET_DB_HOST: ticket-db
      TICKET_DB_PORT: 5432
      TICKET_DB_USER: efmarketplace
      TICKET_DB_PASS: efmarketplace
      TICKET_DB_BASE: efmarketplace
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: bitnami/redis:6.2.5
    hostname: "redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_PORT: 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50
    volumes:
      - redis-data-dev:/data

  adminer:
    build:
      context: .
      dockerfile: docker/adminer/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - PMA_HOST=db:5432
    depends_on:
      - db
    ports:
      - 5555:8080

networks:
  default:
    driver: bridge

volumes:
  db-data-dev:
  redis-data-dev:
